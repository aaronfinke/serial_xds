import json
from pathlib import Path

def gen_xds_text(config, xdspath, framerange):
    text = f"""
SPACE_GROUP_NUMBER= {config.spacegroup}
UNIT_CELL_CONSTANTS= {config.unitcell}
NAME_TEMPLATE_OF_DATA_FRAMES= {xdspath}
JOB= XYCORR INIT COLSPOT IDXREF DEFPIX INTEGRATE CORRECT
ORGX= {config.beamcenter[0]}  ORGY= {config.beamcenter[1]}
DETECTOR_DISTANCE= {config.distance}
OSCILLATION_RANGE= {config.oscillation}
X-RAY_WAVELENGTH= {config.wavelength}
DATA_RANGE= {framerange}
!BACKGROUND_RANGE= {framerange}
SPOT_RANGE= {framerange}
LIB={config.library}
DETECTOR= {config.dettype} MINIMUM_VALID_PIXEL_VALUE=0 OVERLOAD= {config.overload}
SENSOR_THICKNESS= {config.sensorthickness:.3f}
NX= {config.nx} NY= {config.ny}  QX= {config.qx:.3f}  QY= {config.qy:.3f}

TRUSTED_REGION=0.0 1.2
DIRECTION_OF_DETECTOR_X-AXIS= 1.0 0.0 0.0
DIRECTION_OF_DETECTOR_Y-AXIS= 0.0 1.0 0.0
MAXIMUM_NUMBER_OF_JOBS={config.njobs}
MAXIMUM_NUMBER_OF_PROCESSORS={config.nproc}
ROTATION_AXIS= {get_rotation_axis(config.reversephi)}
INCIDENT_BEAM_DIRECTION=0.0 0.0 1.0
FRACTION_OF_POLARIZATION=0.99
POLARIZATION_PLANE_NORMAL= 0.0 1.0 0.0
REFINE(IDXREF)=BEAM AXIS ORIENTATION CELL  ! POSITION
REFINE(INTEGRATE)= ORIENTATION POSITION BEAM ! CELL AXIS
REFINE(CORRECT)=POSITION BEAM ORIENTATION CELL AXIS
VALUE_RANGE_FOR_TRUSTED_DETECTOR_PIXELS= 6000 30000
! INCLUDE_RESOLUTION_RANGE=50 1.8
MINIMUM_I/SIGMA=50.0
CORRECTIONS= !
MINIMUM_FRACTION_OF_INDEXED_SPOTS=0.5
SEPMIN=4.0
INDEX_ERROR=0.1 INDEX_MAGNITUDE=8 INDEX_QUALITY=0.8
CLUSTER_RADIUS=2
MINIMUM_NUMBER_OF_PIXELS_IN_A_SPOT=3
NUMBER_OF_PROFILE_GRID_POINTS_ALONG_ALPHA/BETA=13
NUMBER_OF_PROFILE_GRID_POINTS_ALONG_GAMMA=13

    """
    return text

def get_rotation_axis(reversephi):
    if reversephi:
        return '-1 0 0'
    else:
        return '1 0 0'